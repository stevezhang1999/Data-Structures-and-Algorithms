if(node1->pow < node2->pow){
            temp = node1;
            node1 = node1->next;
            if( node1->pow > node2->pow){
                new_list = AddNode(new_list, temp->pow, temp->data);
            }
            else if( node1->pow == node2->pow){
                new_list = AddNode(new_list, temp->pow, temp->data);
                new_list = AddNode(new_list, node1->pow, node1->data + node2->data);
                node1 = node1->next;
                node2 = node2->next;
            }
            else if(node1->pow < node2->pow){}
        }
        else if(node1->pow == node2->pow){
            new_list = AddNode(new_list, node1->pow, node1->data + node2->data);
            node1 = node1->next;
            node2 = node2->next;
        }
        else if (node1->pow > node2->pow){
            temp = node2;
            node2 = node2->next;
            if( node2->pow > node1->pow){
                new_list = AddNode(new_list, temp->pow, temp->data);
            }
            else if( node1->pow == node2->pow){
                new_list = AddNode(new_list, temp->pow, temp->data);
                new_list = AddNode(new_list, node1->pow, node1->data + node2->data);
                node1 = node1->next;
                node2 = node2->next;
            }
            else if(node1->pow < node2->pow){}
        }







        while(node1->next == NULL && node2->next != NULL ){
        temp = NULL;

        if (node1->pow == node2->pow){
            if(temp!=NULL)
                new_list=AddNode(new_list, temp->pow, temp->data);
            new_list = AddNode(new_list, node1->pow, node1->data + node2->data);
            new_list->next = node2->next;
            break;
        }
        
        else if (node1->pow < node2->pow)
        {
            if(temp!=NULL)
                new_list=AddNode(new_list, temp->pow, temp->data);
            new_list = AddNode(new_list, node1->pow, node1->data);
            new_list->next = node2;
            break;
        }
        
        else if (node1->pow > node2->pow)
        {   
            while(node2->next != NULL){
                if(node2->pow < node1->pow){
                    if(temp!=NULL)
                        new_list=AddNode(new_list, temp->pow, temp->data);
                    node2 = node2->next;
                }
                
            }
        }  
    